MINI HOW-TO

ITEM: Simple album

Presuming you've already installed album properly, we can do some
simple cases.  If you have any errors or problems here, see the
installation docs.

You need a web directory to put themes and your photo album.
We'll use /home/httpd/test in this documentation.  This needs
to be viewable by a webserver.  In this example we'll use the URL:
  http://myserver/test/

Adjust your commands/URLs appropriately

First create a directory and put some images in it.  We'll call this:
  /home/httpd/test/Photos

And we'll add some images called 'IMG_001.jpg' through 'IMG_004.jpg'

Now for the simple case, just run album:

<code>% album /home/httpd/test/Photos</code>

Now you can view the album in a web browser at something like:
  http://myserver/test/Photos

ITEM: Add captions

Create a file /home/httpd/test/Photos/captions.txt with the following
contents (use the 'tab' key where you see "  [tab]  ")

-- captions.txt ---------
IMG_001.jpg  [tab]  First image name
IMG_002.jpg  [tab]  Second image
IMG_003.jpg  [tab]  Another image  [tab]   with a caption!
IMG_004.jpg  [tab]  Last image     [tab]   with another caption.
-------------------------

And run album again:

<code>% album /home/httpd/test/Photos</code>

And you'll see the captions change.

Now create a file with text in: /home/httpd/test/Photos/header.txt

And run album again.  You'll see that text at the top of the page.

ITEM: Hiding Photos

There are a few ways to hide photos/files/directories, but we'll use
the captions file.  Try commenting out an image with '#' in captions.txt:

-- captions.txt ---------
IMG_001.jpg  [tab]  First image name
#IMG_002.jpg  [tab]  Second image
IMG_003.jpg  [tab]  Another image  [tab]   with a caption!
IMG_004.jpg  [tab]  Last image     [tab]   with another caption.
-------------------------

Run album again, and you'll see that IMG_002.jpg is now missing.
If we had done this before running album the first time, we wouldn't
have ever generated the medium or thumbnail images.  If you like,
you can remove them now with -clean:

<code>% album -clean /home/httpd/test/Photos</code>

ITEM: Using A Theme

If themes were installed properly and are in your theme_path then
you should be able to use a theme with your album:

<code>% album -theme Blue /home/httpd/test/Photos</code>

The photo album should now be using the Blue theme.  If it has
a bunch of broken images, then your theme probably hasn't been
installed into a web-accessible directory, see the Installation docs.

Album saves the options you specify, so the next time you run album:

<code>% album /home/httpd/test/Photos</code>

You'll still be using the Blue theme.  To turn off a theme, you can:

<code>% album -no_theme /home/httpd/test/Photos</code>

ITEM: Medium images

Full resolution images are usually too big for a web album, so
we'll use medium images on the image pages:

<code>% album -medium 33% /home/httpd/test/Photos</code>

You can still access the full size images by clicking on the medium image, or:

<code>% album -just_medium /home/httpd/test/Photos</code>

Will keep the full size image from being linked in (presuming we'd
run with the -medium option at some point)

ITEM: Adding some EXIF captions

Let's add aperture info to the captions of each image.

<code>% album -exif "&lt;br&gt;aperture=%Aperture%" /home/httpd/test/Photos</code>

This will only add aperture information for any images that have specified
the 'Aperture' exif tag (the part between the '%' signs).  We also put
a &lt;br&gt; tag in there so the exif info is on a new line.

We can add more exif info:

<code>% album -exif "&lt;br&gt;focal: %FocalLength%" /home/httpd/test/Photos</code>

Because album saved our options before, we now get both EXIF tags for any
images that specify Aperture and FocalLength.  Let's remove aperture:

<code>% album -no_exif "&lt;br&gt;aperture=%Aperture%" /home/httpd/test/Photos</code>

The '-no_exif' option has to match the previous exif string exactly or
it will be ignored.  You can also edit the config file that album created:
  /home/httpd/test/Photos/album.conf
And remove it there.

ITEM: Adding more albums

Let's say we go on a trip to spain.  We take some photos and put them in:
  /home/httpd/test/Photos/Spain/

Now run album again on the top level:

<code>% album /home/httpd/test/Photos</code>

This will fixup Photos so it now links to spain and will run album
on Spain/ as well, with the same settings/theme, etc..

Now let's go on another trip, and we create:
  /home/httpd/test/Photos/Italy/

We could run album on the top level:

<code>% album /home/httpd/test/Photos</code>

But that would rescan the Spain directory which hasn't changed.
Album usually won't generate any HTML or thumbnails unless it needs to,
but it can still waste time, especially as our albums get bigger.
So we can tell it to just add the new directory:

<code>% album -add /home/httpd/test/Photos/Italy</code>

This will fix the top index (in Photos) and generate the Italy album.

ITEM: Translated by:

David Ljung Madison  [http://GetDave.com/]

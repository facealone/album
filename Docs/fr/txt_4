Fichiers de configuration

<span lang="fr">

ITEM: Fichiers de configuration

Le comportement du script album peut être controlé via des options en ligne
de commande comme :

<code>% album -no_known_images</code>

<code>% album -geometry 133x100</code>

<code>% album -exif "Fichier : %File name% " -exif "pris avec %Camera make%"</code>

Mais ces options peuvent aussi être définies dans un fichier de configuration :

<tt># Exemple de fichier de configuration      # les commentaires sont ignorés
known_images       0            # known_images=0 est la même chose que no_known_images
geometry           133x100
exif               "Fichier : %File name% "
exif               "pris avec %Camera make%"</tt>

Le format du fichier de configuration est d'une option par ligne
éventuellement suivie par des espaces et la valeur de l'option. Les options
booléennes peuvent être initialisées sans valeur ou bien être positionnées
avec 0 et 1.

ITEM: Localisation des fichiers de configuration

album recherche les fichiers de configuration dans quelques endroits ; dans
l'ordre :

/etc/album/conf              Configuration valable pour l'ensemble du système
/etc/album.conf              Configuration valable pour l'ensemble du système
$BASENAME/album.conf         Dans le répertoire d'installation d'album
$HOME/.albumrc               Configuration dépendante de l'utilisateur
$HOME/.album.conf            Configuration dépendante de l'utilisateur
$DOT/album.conf              Configuration dépendante de l'utilisateur (je
conserver mes fichiers "point" alleurs)
$USERPROFILE/album.conf      Pour Windows (C:\Documents et Settings\Utilisateur)

album regarde également des fichiers album.conf à l'intérieur même des
répertoires de l'album photo courant.
Les sous-albums photos peuvent aussi disposer d'un fichier album.conf qui
modifiera la configuration de base des répertoires parent (ceci vous permet,
par exemple, d'avoir plusieurs thèmes pour des parties différentes de votre
album photo).
N'importe quel fichier album.conf dans le répertoire de votre album photo
configurera l'album et tous les sous-albums à moins qu'un autre fichier de
configuration album.conf ne soit trouvé dans un sous-album.

Par exemple, considérons la configuration pour un album photo situé dans le
répertoire 'images/album.conf' :

<tt>theme       Dominatrix6
columns     3</tt>

Une autre configuration est trouvée dans le répertoire
'images/europe/album.conf' :

<tt>theme       Blue
crop</tt>

album utilisera le thème Dominatrix6 pour l'album photo du répertoire images/
et tous ses sous-albums excepté pour le sous-album images/europe/ qui
disposera du thème Blue. Toutes les images de l'album photo du répertoire
images/ seront sur 3 colonnes y compris dans le sous-album images/europe/ car
ce paramètre y est inchangé. Cependant, toutes les vignettes du sous-album
images/europ/ seront recadrées du fait de la présence de l'option 'crop' dans
le fichier de configuration.


ITEM: Sauvegarde des options

Dès que vous lancez le script album, les options en ligne de commande sont
sauvegardées dans un fichier album.conf situé à l'intérieur du répertoire de
votre album photo. Si un tel fichier existe déjà, il sera modifié et non
remplacé ce qui permet d'éditer très facilement ce fichier via un éditeur de texte.

Ceci facilite l'usage ultérieur du script album. Par exemple, si vous générez
pour la première fois un album photo avec :

<code>% album -crop -no_known_images -theme Dominatrix6 -sort date images/</code>

Alors la prochaine fois que vous appellerez album, vous aurez juste besoin de
taper :

<code>% album images/</code>

Ceci fonctionne également pour les sous-albums photo :

<code>% album images/africa/</code>

trouvera aussi toutes les options sauvegardées.

Quelques options à l'usage limité comme -add (ajouter un nouveau sous-album),
-clean (effacer les fichiers inutiles), -force (forcer la regénération d'un
album photo), -depth (préciser la profondeur c'est-à-dire le nombre de niveaux
de sous-albums sur laquelle s'applique la commande), etc... ne sont pas sauvegardées pour des raisons évidentes.


Lancer plusieurs fois album dans le même répertoire peut devenir confus si
vous ne comprenez pas comment les options sont sauvegardées.
Voici quelques exemples.

Introduction :
1) Les options en ligne de commande sont traités avant les options du fichier
   de configuration trouvé dans le répertoire de l'album photo.
   
2) album utilisera les mêmes options la prochaine fois que vous le lancez si
   vous ne spécifiez aucune option.

   Par exemple, si on suppose qu'on lance deux fois album dans un répertoire :

   <code>% album -exif "commentaire 1" photos/espagne</code>
   <code>% album photos/espagne</code>

   La deuxième fois que vous utiliserez album, vous aurez toujours le
   commentaire exif "commentaire 1" pour l'album photo de ce répertoire.

3) album ne finira pas avec de multiples copies d'une même option acceptant
   plusieurs arguments si vous continuez à l'appeler avec la même ligne de
   commande.

   Par exemple :

   <code>% album -exif "commentaire 1" photos/espagne</code>
   <code>% album -exif "commentaire 1" photos/espagne</code>

   La deuxième fois que vous lancez album, vous n'aurez pas à la fin plusieurs
   copies du commentaire exif "commentaire 1" dans vos photos.   

   <b>Cependant, veuillez noter que si vous re-préciser à chaque fois les
   mêmes options, album pourrait être plus lent à s'exécuter car il pensera
   qu'il a besoin de regénérer vos fichiers html !</b>

Ainsi par exemple, si vous lancez :

<code>% album -medium 640x640 photos/espagne</code>
  (puis plus tard...)
<code>% album -medium 640x640 photos/espagne</code>

Alors la seconde fois regénérera inutilement toutes vos photos de taille
moyenne ("medium"). Ceci est <b>beaucoup</b> lent.

Il est donc préférable de spécifier les options en ligne de commande
seulement la première fois, puis d'utiliser ensuite la sauvegarde qui en a été
faite comme ici :

<code>% album -medium 640x640 photos/espagne</code>
  (puis plus tard...)
<code>% album photos/espagne</code>


Malheureusement, ces contraintes signifient que, pour toutes les options
acceptant plusieurs arguments, les dernières valeurs entrées se retrouveront
en début de liste comme sur l'exemple ci-dessous avec l'option -exif.

<code>% album -exif "commentaire 1" photos/espagne</code>
<code>% album -exif "commentaire 2" photos/espagne</code>

Les commentaires seront en fait ordonnés ainsi : "commentaire 2" puis
"commentaire 1".

Pour préciser l'ordre exact, vous aurez besoin de re-spécifier toutes les
options :

Soit en spécifiant de nouveau "commentaire 1" pour le remettre en première
position dans la liste.

<code>% album -exif "commentaire 1" photos/espagne</code>

Ou juste en spécifiant toutes les options dans l'ordre que vous souhaitez :

<code>% album -exif "commentaire 1" -exif "commentaire 2" photos/espagne</code>

Quelques fois, il peut être plus facile d'éditer directement le fichier
album.conf afin d'y apporter les modifications souhaitées.

Finalement, ceci nous permet seulement d'accumuler les options.
On peut effacer les options en utiliser -no et -clear (voir la section
correspondante <a href='Section_3.html#Options'>Options</a>), ces
modifications étant également sauvegardées d'une utilisation à une autre.

ITEM: Traduit par:

Jean-Marc [jean-marc.bouche AT 9online.fr]
</span>
